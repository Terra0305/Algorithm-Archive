import java.util.*;
public class Baek30614 {

    public static void main(String[] args) throws Exception {
        Scanner sc= new Scanner(System.in);
        
        int N =Integer.parseInt(sc.nextLine());
        String Containerst= sc.nextLine();

        boolean result =  true;
        Stack<Character> Container = new Stack<>();
        
        for(int i=0;i<N;i++){
            char c = Containerst.charAt(i);

            if(Character.isLowerCase(c))
            Container.push(c);
            else {
                if(Container.isEmpty() || Container.peek()!=Character.toLowerCase(c)){
                    result =false;
                    break;
                }
                Container.pop();
            }
            
        }
            if(!Container.empty()){
                result = false;
            
            }

            if(result){
                System.out.println(1);
            }else
            System.out.println(0);
            
                
            }
    }
        
        
        
         
    
       
    

/*
 You are developing a robot that helps in storing containers that have arrived at ports before sending them to ships. These robots are responsible for handling these containers using limited space. Specifically, the space can fit multiple containers one over the other, but not side by side, as depicted in the figure.

While operating, the robot performs two actions:

Putting a container in storage.
Taking a container from storage.
There are 26 types of containers in this port, each one characterized by a letter of the Latin alphabet. Each time an action is performed, the robot logs the type of the container in lowercase when storing a container and in uppercase when taking a container from storage. Your task is to check if the logs produced by a robot indicate stable operation. In stable operation, the logged containers of action type 2 exist in storage and are in the uppermost position. Moreover, in stable operation, we always end with empty storage.



As an example, consider a scenario in which the robot produces the log: 'cdDC'. Here, we have a stable operation of the robot, as the robot initially places 'c' and then 'd' (indicating that 'd' is in the upper position). The robot then takes the first 'd' out and, finally, takes out 'c'. On the other hand, an unstable operation would result from the log: 'cdCD', since the robot cannot take 'c' before taking out 'd'.

입력
The first line contains the length of the log generated by the robot. The second line contains the extracted log of the robot operation.

출력
A single number 0 if the log indicate wrong operation and 1 if the operation is stable.

예제 입력 1 
8
DdaacCAA
예제 출력 1 
0
예제 입력 2 
14
aabcdDCBdDAbBA
예제 출력 2 
1
 */
